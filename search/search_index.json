{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Supermorecado","text":"<p> Extend the functionality of morecantile with additional commands. </p> <p> </p> <p>Documentation: developmentseed.org/supermorecado/</p> <p>Source Code: developmentseed/supermorecado</p> <p>supermorecado is like supermercado, but with support for other TileMatrixSet grids.</p>"},{"location":"#install","title":"Install","text":"<pre><code>$ python -m pip install -U pip\n$ python -m pip install supermorecado\n\n# Or install from source:\n\n$ python -m pip install -U pip\n$ python -m pip install git+https://github.com/developmentseed/supermorecado.git\n</code></pre>"},{"location":"#usage","title":"Usage","text":"<pre><code>supermorecado --help\nUsage: supermorecado [OPTIONS] COMMAND [ARGS]...\n\n  Command line interface for the Supermorecado Python package.\n\nOptions:\n  --help  Show this message and exit.\n\nCommands:\n  burn     Burn a stream of GeoJSONs into a output stream of the tiles they intersect for a given zoom.\n  edges    For a stream of [&lt;x&gt;, &lt;y&gt;, &lt;z&gt;] tiles, return only those tiles that are on the edge.\n  heatmap  Creates a vector `heatmap` of tile densities.\n  union    Returns the unioned shape of a stream of [&lt;x&gt;, &lt;y&gt;, &lt;z&gt;] tiles in GeoJSON.\n</code></pre>"},{"location":"#supermorecado-burn","title":"<code>supermorecado burn</code>","text":"<pre><code>&lt;{geojson} stream&gt; | supermorecado burn &lt;zoom&gt; --identifier {tms Identifier} | &lt;[x, y, z] stream&gt;\n</code></pre> <p>Takes an input stream of GeoJSON and returns a stream of intersecting <code>[x, y, z]</code>s for a given zoom.</p> <p>Using default TMS (<code>WebMercatorQuad</code>) <pre><code>cat tests/fixtures/france.geojson | supermorecado burn 9 | morecantile shapes | fio collect | geojsonio\n</code></pre></p> <p></p> <p>Using other TMS (e.g <code>WGS1984Quad</code>) <pre><code>cat tests/fixtures/france.geojson | supermorecado burn 6 --identifier WGS1984Quad | morecantile shapes --identifier WGS1984Quad | fio collect | geojsonio\n</code></pre></p> <p></p>"},{"location":"#supermorecado-edges","title":"<code>supermorecado edges</code>","text":"<pre><code>&lt;[x, y, z] stream&gt; | supermorecado edges | &lt;[x, y, z] stream&gt;\n</code></pre> <p>Outputs a stream of <code>[x, y, z]</code>s representing the edge tiles of an input stream of <code>[x, y, z]</code>s. Edge tile = any tile that is either directly adjacent to a tile that does not exist, or diagonal to an empty tile.</p> <pre><code>cat tests/fixtures/france.geojson | supermorecado burn 9 | supermorecado edges | morecantile shapes | fio collect | geojsonio\n</code></pre> <p></p>"},{"location":"#supermorecado-union","title":"<code>supermorecado union</code>","text":"<pre><code>&lt;[x, y, z] stream&gt; | supermorecado union --identifier {tms Identifier} | &lt;{geojson} stream&gt;\n</code></pre> <p>Outputs a stream of unioned GeoJSON from an input stream of <code>[x, y, z]</code>s. Like <code>morecantile shapes</code> but as an overall footprint instead of individual shapes for each tile.</p> <p>Using default TMS (<code>WebMercatorQuad</code>) <pre><code>cat tests/fixtures/france.geojson | supermorecado burn 9 | supermorecado union | fio collect | geojsonio\n</code></pre></p> <p></p> <p>Using other TMS (e.g <code>WGS1984Quad</code>)</p> <pre><code>cat tests/fixtures/france.geojson | supermorecado burn 6 --identifier WGS1984Quad |  supermorecado union --identifier WGS1984Quad | fio collect | geojsonio\n</code></pre> <p></p>"},{"location":"#supermorecado-heatmap","title":"<code>supermorecado heatmap</code>","text":"<p><pre><code>&lt;[x, y, z] stream&gt; | supermorecado heatmap --identifier {tms Identifier} | &lt;{geojson} stream&gt;\n</code></pre> Outputs a stream of heatmap GeoJSON from an input stream of <code>[x, y, z]</code>s.</p> <p>Using default TMS (<code>WebMercatorQuad</code>) <pre><code>cat tests/fixtures/heatmap.txt| supermorecado heatmap | fio collect | geojsonio\n</code></pre></p> <p></p> <p>Using other TMS (e.g <code>WGS1984Quad</code>)</p> <pre><code># create a list of tiles\ncat tests/fixtures/france.geojson | supermorecado burn 6 --identifier WGS1984Quad &gt; france_wgs84_z6.txt\n# randomly append more tiles\nfor run in {1..10}; do cat france_wgs84_z6.txt | sort -R | head -n 2 &gt;&gt; france_wgs84_z6.txt; done\n\ncat france_wgs84_z6.txt |  supermorecado heatmap --identifier WGS1984Quad | fio collect | geojsonio\n</code></pre> <p></p>"},{"location":"#api-migration","title":"API migration","text":"<p><code>supermorecado</code> is really similar to <code>supermercado</code> (it reuse most of the code) but with the addition of multiple TMS support from morecantile.</p> <pre><code>features = [\n    {\n        \"geometry\": {\n            \"coordinates\": [\n                [-127.97, 49.15],\n                [-101.95, -8.41],\n                [-43.24, -32.84],\n                [37.62, -25.17],\n                [71.72, -7.01],\n                [107.23, 48.69],\n            ],\n            \"type\": \"LineString\",\n        },\n        \"properties\": {},\n        \"type\": \"Feature\",\n    },\n]\n\n# supermercado\nfrom supermercado import burntiles, uniontiles\n\ntiles = burntiles.burn(features)\nu_tiles = uniontiles.union(features)\n\n# supermorecado\nimport morecantile\nfrom supermorecado import burnTiles, unionTiles\n\ntms = morecantile.tms.get(\"WebMercatorQuad\")\n\nburntiles = burnTiles(tms=tms)\ntiles = burntiles.burn(features)\n\nuniontiles = unionTiles(tms=tms)\nu_tiles = uniontiles.burn(features)\n</code></pre>"},{"location":"#changes","title":"Changes","text":"<p>See CHANGES.md.</p>"},{"location":"#contribution-development","title":"Contribution &amp; Development","text":"<p>See CONTRIBUTING.md</p>"},{"location":"#license","title":"License","text":"<p>See LICENSE</p>"},{"location":"#authors","title":"Authors","text":"<p>Created by Development Seed</p>"},{"location":"contributing/","title":"Contributing","text":"<p>Issues and pull requests are more than welcome.</p> <p>dev install</p> <pre><code>$ git clone https://github.com/developmentseed/supermorecado.git\n$ cd supermorecado\n$ python -m pip install -e .[\"dev\"]\n</code></pre> <p>You can then run the tests with the following command:</p> <pre><code>python -m pytest --cov supermorecado --cov-report term-missing -s -vv\n</code></pre>"},{"location":"contributing/#pre-commit","title":"pre-commit","text":"<p>This repo is set to use <code>pre-commit</code> to run isort, flake8, pydocstring, black (\"uncompromising Python code formatter\") and mypy when committing new code.</p> <pre><code>$ pre-commit install\n</code></pre>"},{"location":"contributing/#docs","title":"Docs","text":"<pre><code>$ git clone https://github.com/developmentseed/supermorecado.git\n$ cd supermorecado\n$ python -m pip install -e .[\"docs\"]\n</code></pre> <p>Hot-reloading docs:</p> <pre><code>$ mkdocs serve -f docs/mkdocs.yml\n</code></pre> <p>To manually deploy docs (note you should never need to do this because Github Actions deploys automatically for new commits.):</p> <pre><code>$ mkdocs gh-deploy -f docs/mkdocs.yml\n</code></pre>"},{"location":"release-notes/","title":"Release","text":""},{"location":"release-notes/#012-2023-09-11","title":"0.1.2 (2023-09-11)","text":"<ul> <li>forward <code>truncate</code> option to <code>project_geom</code> in <code>burn</code> method (author @JackDunnNZ, developmentseed/supermorecado!6)</li> </ul>"},{"location":"release-notes/#011-2023-06-03","title":"0.1.1 (2023-06-03)","text":"<ul> <li>fix issue in <code>burnTiles.tile_extrema</code> for TMS that might return tile indices in <code>max -&gt; min</code> order</li> </ul>"},{"location":"release-notes/#010-2023-06-02","title":"0.1.0 (2023-06-02)","text":"<ul> <li>Initial release</li> </ul>"}]}